/*
 * Copyright (C) 2018 Heinrich-Heine-Universitaet Duesseldorf, Institute of Computer Science, Department Operating Systems
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_hhu_bsinfo_utils_JNIFileRaw */

#ifndef _Included_de_hhu_bsinfo_utils_JNIFileRaw
#define _Included_de_hhu_bsinfo_utils_JNIFileRaw
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    prepareRawDevice
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_prepareRawDevice
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    createLog
 * Signature: (Ljava/lang/String;J)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_createLog
  (JNIEnv *, jclass, jstring, jlong);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    openLog
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_openLog
  (JNIEnv *, jclass, jstring);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    closeLog
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_closeLog
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    createBuffer
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_createBuffer
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    freeBuffer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_freeBuffer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    write
 * Signature: (I[BIIJJI)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_write
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint, jlong, jlong, jint);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    read
 * Signature: (I[BIIJJI)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_read
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint, jlong, jlong, jint);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    dwrite
 * Signature: (I[BIIJJI)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_dwrite
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint, jlong, jlong, jint);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    dread
 * Signature: (I[BIIJJI)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_dread
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint, jlong, jlong, jint);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    length
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_length
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    dlength
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_dlength
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    setDFileLength
 * Signature: (IJ)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_setDFileLength
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    deleteLog
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_deleteLog
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    getFileList
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_getFileList
  (JNIEnv *, jclass);

/*
 * Class:     de_hhu_bsinfo_utils_JNIFileRaw
 * Method:    print_index_for_test
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_de_hhu_bsinfo_utils_JNIFileRaw_print_1index_1for_1test
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
