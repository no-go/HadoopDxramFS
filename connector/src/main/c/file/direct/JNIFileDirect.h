/*
 * Copyright (C) 2018 Heinrich-Heine-Universitaet Duesseldorf, Institute of Computer Science, Department Operating Systems
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_hhu_bsinfo_dxutils_jni_JNIFileDirect */

#ifndef _Included_de_hhu_bsinfo_dxutils_jni_JNIFileDirect
#define _Included_de_hhu_bsinfo_dxutils_jni_JNIFileDirect
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     de_hhu_bsinfo_dxutils_jni_JNIFileDirect
 * Method:    open
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_dxutils_jni_JNIFileDirect_open
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     de_hhu_bsinfo_dxutils_jni_JNIFileDirect
 * Method:    createBuffer
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_de_hhu_bsinfo_dxutils_jni_JNIFileDirect_createBuffer
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_hhu_bsinfo_dxutils_jni_JNIFileDirect
 * Method:    freeBuffer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_hhu_bsinfo_dxutils_jni_JNIFileDirect_freeBuffer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     de_hhu_bsinfo_dxutils_jni_JNIFileDirect
 * Method:    close
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_dxutils_jni_JNIFileDirect_close
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_hhu_bsinfo_dxutils_jni_JNIFileDirect
 * Method:    write
 * Signature: (I[BIIJI)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_dxutils_jni_JNIFileDirect_write
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint, jlong, jint);

/*
 * Class:     de_hhu_bsinfo_dxutils_jni_JNIFileDirect
 * Method:    dwrite
 * Signature: (I[BIIJI)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_dxutils_jni_JNIFileDirect_dwrite
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint, jlong, jint);

/*
 * Class:     de_hhu_bsinfo_dxutils_jni_JNIFileDirect
 * Method:    read
 * Signature: (I[BIIJI)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_dxutils_jni_JNIFileDirect_read
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint, jlong, jint);

/*
 * Class:     de_hhu_bsinfo_dxutils_jni_JNIFileDirect
 * Method:    seek
 * Signature: (IJ)J
 */
JNIEXPORT jlong JNICALL Java_de_hhu_bsinfo_dxutils_jni_JNIFileDirect_seek
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     de_hhu_bsinfo_dxutils_jni_JNIFileDirect
 * Method:    length
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_de_hhu_bsinfo_dxutils_jni_JNIFileDirect_length
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_hhu_bsinfo_dxutils_jni_JNIFileDirect
 * Method:    setFileLength
 * Signature: (IJ)I
 */
JNIEXPORT jint JNICALL Java_de_hhu_bsinfo_dxutils_jni_JNIFileDirect_setFileLength
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     de_hhu_bsinfo_dxutils_jni_JNIFileDirect
 * Method:    test
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_de_hhu_bsinfo_dxutils_jni_JNIFileDirect_test
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
